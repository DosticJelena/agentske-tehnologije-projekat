{"version":3,"sources":["_const/master.js","components/AgentCenter/Nodes/Nodes.js","components/AgentCenter/Agents/Agents.js","components/AgentCenter/Messages/Messages.js","components/AgentCenter/Results/Results.js","components/AgentCenter/AgentCenter.js","App.js","serviceWorker.js","index.js"],"names":["master","Nodes","props","state","hostAddress","hostPort","hostAlias","masterAddress","substr","length","masterPort","nodes","axios","get","this","masterURL","then","response","console","log","setState","data","alias","address","catch","error","className","map","node","React","Component","Agents","setAgentClass","e","agClass","target","value","setAgentName","agName","socketFunc","urlReg","wsURL","socketReg","WebSocket","onmessage","msg","readyState","JSON","parse","runningAgents","onclose","getRunningAgents","startAgentFunction","put","stopAgentFunction","agent","config","headers","host","type","name","delete","agentClasses","names","agentClass","module","id","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","onClick","disabled","Messages","setSender","sender","setReceivers","tempList","receivers","index","indexOf","splice","setPerformative","performative","sendMessage","post","content","performatives","p","filter","Results","resultFile","AgentCenter","showNodesFunction","showAgents","showNodes","showMessages","showResults","showAgentsFunction","showMessagesFunction","showResultsFunction","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.02656aa9.chunk.js","sourcesContent":["const master = \"192.168.0.20:8080\";\r\n\r\nexport default master;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport master from '../../../_const/master';\r\n\r\nclass Nodes extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hostAddress: \"\",\r\n            hostPort: \"\",\r\n            hostAlias: \"\",\r\n            masterAddress: master.substr(0, master.length  -5),\r\n            masterPort: master.substr(master.length - 4, 4),\r\n            nodes: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(this.props.masterURL + \"/client/host\")\r\n            .then(response => {\r\n                console.log(response);\r\n                this.setState({\r\n                    hostAlias: response.data.alias.substr(0, response.data.alias.length - 5),\r\n                    hostAddress: response.data.address.substr(0, response.data.address.length - 5),\r\n                    hostPort: response.data.address.substr(response.data.address.length - 4, 4)\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n\r\n            axios.get(this.props.masterURL + \"/connection\")\r\n            .then(response => {\r\n                console.log(response);\r\n                this.setState({\r\n                    nodes: response.data\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n                    <h2>Master Node Info</h2>\r\n                    <hr />\r\n                    <div className=\"this-node-info\">\r\n                        <p>IP Address: <span>{this.state.masterAddress}</span></p>\r\n                        <p>Port: <span>{this.state.masterPort}</span></p>\r\n                    </div>\r\n                    <br />\r\n                    <h2>This Node Info {this.state.hostAddress === this.state.masterAddress ? <h4>[master]</h4> : null}</h2>\r\n                    <hr />\r\n                    <div className=\"this-node-info\">\r\n                        <p>IP Address: <span>{this.state.hostAddress}</span></p>\r\n                        <p>Port: <span>{this.state.hostPort}</span></p>\r\n                        <p>Alias: <span>{this.state.hostAlias}</span></p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    <h2>Other Nodes</h2>\r\n                    <hr />\r\n                    <div className=\"all-nodes\">\r\n                        <table>\r\n                            <tr><td><strong>IP Address</strong></td><td><strong>Port</strong></td></tr>\r\n                            {this.state.nodes.map(node => <tr><td>{node.substr(0, node.length - 5)}</td><td>{node.substr(node.length - 4, 4)}</td></tr>)}\r\n                            \r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Nodes;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Agents extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            runningAgents: [],\r\n            agentClasses: [],\r\n            agClass: '',\r\n            agName: '',\r\n            names: [\r\n                \"nekretnine.rs\",\r\n                \"4zida.rs\",\r\n                \"nadjidom.com\"\r\n            ]\r\n        }\r\n    }\r\n\r\n    setAgentClass = e => {\r\n        this.setState({ agClass: e.target.value });\r\n    }\r\n\r\n    setAgentName = e => {\r\n        this.setState({ agName: e.target.value});\r\n    }\r\n\r\n    socketFunc = () => {\r\n        var urlReg = this.props.wsURL;\r\n        var socketReg = new WebSocket(urlReg);\r\n        socketReg.onmessage = (msg) => {\r\n            console.log(socketReg.readyState + \" ---- (message) ---- \");\r\n            console.log(JSON.parse(msg.data));\r\n            this.setState({ runningAgents: JSON.parse(msg.data) });\r\n        }\r\n        socketReg.onclose = () => socketReg = null;\r\n    }\r\n\r\n    getRunningAgents = () => {\r\n        axios.get(this.props.masterURL + \"/client/agents/running\")\r\n            .then(response => {\r\n                console.log(response);\r\n                this.setState({\r\n                    runningAgents: response.data\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    startAgentFunction = () => {\r\n        axios.put(this.props.masterURL + \"/client/agents/running/\" + this.state.agClass + \"/\" + this.state.agName)\r\n            .then(response => {\r\n                console.log(response);\r\n                this.setState({agClass: '', agName: ''})\r\n                this.getRunningAgents();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    stopAgentFunction = (agent) => {\r\n        var config = {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: {\r\n                host: agent.host,\r\n                type: agent.type,\r\n                name: agent.name\r\n            }\r\n        };\r\n        axios.delete(this.props.masterURL + \"/client/agents/running\", config)\r\n            .then(response => {\r\n                console.log(response);\r\n                this.getRunningAgents();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(this.props.masterURL + \"/client/agents/classes\")\r\n            .then(response => {\r\n                console.log(response);\r\n                this.setState({\r\n                    agentClasses: response.data\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n\r\n        this.getRunningAgents();\r\n        this.socketFunc();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n                    <div>\r\n                        <h2>Agent Types</h2>\r\n                        <hr />\r\n                        <table>\r\n                            {this.state.agentClasses.map(agentClass => {\r\n                                return <tr>\r\n                                    <td> {agentClass.module} </td>\r\n                                </tr>\r\n                            })}\r\n                        </table>\r\n                        <br />\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <h2>Start Agent</h2>\r\n                            <hr />\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">\r\n                                    <div className=\"dropdown\">\r\n                                        <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                            Agent Type\r\n                                        </button>\r\n                                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                            {this.state.agentClasses.map(agentClass => {\r\n                                                return <button className=\"dropdown-item\" value={agentClass.module} onClick={this.setAgentClass}>{agentClass.module}</button>\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-3\">\r\n                                    <div className=\"dropdown\">\r\n                                        <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                            Agent Name\r\n                                        </button>\r\n                                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                            {this.state.names.map(name => {\r\n                                                return <button className=\"dropdown-item\" value={name} onClick={this.setAgentName}>{name}</button>\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-7\">\r\n                                    {this.state.agClass === '' ? null : <label>Type: <input value={this.state.agClass} disabled className=\"sender\" /></label>}\r\n                                    {this.state.agName === '' ? null : <label>Name: <input value={this.state.agName} disabled className=\"sender\" /></label>}\r\n                                    {this.state.agClass === '' || this.state.agName === '' ? null : <button className=\"btn start-stop\" onClick={this.startAgentFunction}>Start</button>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    <h2>Running Agents</h2>\r\n                    <hr />\r\n                    <div className=\"all-nodes\">\r\n                        <table>\r\n                            <tr><td><strong>Agent Name</strong></td><td><strong>Host Address</strong></td><td><strong>Type</strong></td><td><strong></strong></td></tr>\r\n                            {this.state.runningAgents.map(agent => {\r\n                                return <tr>\r\n                                    <td>{agent.name}</td>\r\n                                    <td>{agent.host.address}</td>\r\n                                    <td><em>{agent.type.type}</em></td>\r\n                                    <td><button className=\"btn start-stop\" onClick={() => this.stopAgentFunction(agent)}>Stop</button></td>\r\n                                </tr>\r\n                            })}\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Agents;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Messages extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            performatives: [],\r\n            runningAgents: [],\r\n            sender: null,\r\n            receivers: [],\r\n            performative: \"NOT_UNDERSTOOD\"\r\n        }\r\n    }\r\n\r\n    setSender = (agent) => {\r\n        console.log(agent);\r\n        this.setState({ sender: agent });\r\n    }\r\n\r\n    setReceivers = (agent) => {\r\n        let tempList = [...this.state.receivers];\r\n        var index = tempList.indexOf(agent);\r\n        if (index !== -1) {\r\n            tempList.splice(index, 1);\r\n            this.setState({ receivers: tempList });\r\n        } else {\r\n            this.setState({ receivers: [...this.state.receivers, agent] });\r\n        }\r\n    }\r\n\r\n    setPerformative = e => {\r\n        this.setState({performative: e.target.value});\r\n    }\r\n\r\n    socketFunc = () => {\r\n        var urlReg = this.props.wsURL;\r\n        var socketReg = new WebSocket(urlReg);\r\n        socketReg.onmessage = (msg) => {\r\n            console.log(socketReg.readyState + \" ---- (message) ---- \");\r\n            console.log(JSON.parse(msg.data));\r\n            this.setState({ runningAgents: JSON.parse(msg.data) });\r\n        }\r\n        socketReg.onclose = () => socketReg = null;\r\n    }\r\n\r\n    getRunningAgents = () => {\r\n        axios.get(this.props.masterURL + \"/client/agents/running\")\r\n            .then(response => {\r\n                console.log(response);\r\n                this.setState({\r\n                    runningAgents: response.data\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    sendMessage = () => {\r\n        axios.post(this.props.masterURL + \"/client/messages\", {\r\n            sender: this.state.sender,\r\n            receivers: this.state.receivers,\r\n            content: \"https://www.\" + this.state.sender.name + \"/\",\r\n            performative: this.state.performative\r\n        })\r\n            .then(response => {\r\n                console.log(response);\r\n                this.setState({performative: \"NOT_UNDERSTOOD\", sender: null, receivers: []})\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(this.props.masterURL + \"/client/messages\")\r\n            .then(response => {\r\n                console.log(response);\r\n                this.setState({ performatives: response.data })\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n\r\n        this.getRunningAgents();\r\n        this.socketFunc();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n                    <h2>Performatives</h2>\r\n                    <hr />\r\n                    <div className=\"perfs\">\r\n                        {this.state.performatives.map(p => <button className=\"perf-btn\" value={p} onClick={this.setPerformative}>{p}</button>)}\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    <h2>Create Message</h2>\r\n                    <hr />\r\n                    <div className=\"row\">\r\n                        <div className=\"col-2\">\r\n                            <div className=\"dropdown\">\r\n                                <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    Sender\r\n                                </button>\r\n                                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                    {this.state.runningAgents.filter(agent => agent.type.type === \"Master\").map(agent => {\r\n                                        return <button className=\"dropdown-item\" value={agent.name} onClick={() => this.setSender(agent)}>{agent.name} | {agent.type.type}</button>\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            {this.state.sender === null ? null : <div className=\"sender\">{this.state.sender.name} | <em>{this.state.sender.type.type}</em></div>}\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                            <div className=\"dropdown\">\r\n                                <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    Receivers\r\n                                </button>\r\n                                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                    {this.state.runningAgents.filter(agent => agent.type.type !== \"Master\" && agent.name === this.state.sender?.name).map(agent =>  {\r\n                                        return <label>\r\n                                                <input onClick={() => this.setReceivers(agent)} value={agent.name + \" (\" + agent.host.address + \")\"} type=\"checkbox\" /> {agent.name} | {agent.type.type}\r\n                                            </label>\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            {this.state.receivers.map(agent =>\r\n                                <div className=\"sender\">{agent.name} | <em>{agent.type.type}</em></div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"row all-nodes\">\r\n                        <table>\r\n                            <tr>\r\n                                <td>Web Site</td><td>Performative</td>\r\n                            </tr>\r\n                            <tr>\r\n                                {this.state.sender ? <td>https://www.{this.state.sender?.name}/</td> : <td>https://</td>}<td>{this.state.performative}</td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                    <button className=\"btn msg-btn\" onClick={this.sendMessage}>Send</button>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\n\r\nclass Results extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            resultFile: ''\r\n        }\r\n    }\r\n\r\n    socketFunc = () => {\r\n        var urlReg = this.props.wsURL + \"/results\";\r\n        var socketReg = new WebSocket(urlReg);\r\n        socketReg.onmessage = (msg) => {\r\n            console.log(socketReg.readyState + \" ---- (message) ---- \");\r\n            console.log(msg.data);\r\n            this.setState({ resultFile: msg.data });\r\n        }\r\n        socketReg.onclose = () => socketReg = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.socketFunc();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                {this.state.resultFile}\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Results;","import React from 'react';\r\nimport Nodes from './Nodes/Nodes';\r\nimport Agents from './Agents/Agents';\r\nimport Messages from './Messages/Messages';\r\nimport Results from './Results/Results';\r\n\r\nimport host from '../../_const/host';\r\n\r\nclass AgentCenter extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            masterURL: \"http://\" + host + \"/WarAT2020/rest\",\r\n            wsURL: \"ws://\" + host + \"/WarAT2020/ws\",\r\n            showNodes: true,\r\n            showAgents: false,\r\n            showMessages: false,\r\n            showResults: false\r\n        }\r\n    }\r\n\r\n    showNodesFunction = () => {\r\n        this.setState({ showAgents: false, showNodes: true, showMessages: false, showResults: false });\r\n    }\r\n\r\n    showAgentsFunction = () => {\r\n        this.setState({ showAgents: true, showNodes: false, showMessages: false, showResults: false });\r\n    }\r\n\r\n    showMessagesFunction = () => {\r\n        this.setState({ showAgents: false, showNodes: false, showMessages: true, showResults: false });\r\n    }\r\n\r\n    showResultsFunction = () => {\r\n        this.setState({ showAgents: false, showNodes: false, showMessages: false, showResults: true });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"AgentCenter\">\r\n                <h1>Agent Center\r\n                    <button\r\n                        onClick={this.showNodesFunction}\r\n                        className={this.state.showNodes ? \"btn show-hide-btn active-btn\" : \"btn show-hide-btn\"}>\r\n                        Nodes\r\n                    </button>\r\n                    <button\r\n                        onClick={this.showAgentsFunction}\r\n                        className={this.state.showAgents ? \"btn show-hide-btn active-btn\" : \"btn show-hide-btn\"}>\r\n                        Agents\r\n                    </button>\r\n                    <button\r\n                        onClick={this.showMessagesFunction}\r\n                        className={this.state.showMessages ? \"btn show-hide-btn active-btn\" : \"btn show-hide-btn\"}>\r\n                        Messages\r\n                    </button>\r\n                    <button\r\n                        onClick={this.showResultsFunction}\r\n                        className={this.state.showResults ? \"btn show-hide-btn active-btn\" : \"btn show-hide-btn\"}>\r\n                        Results\r\n                    </button>\r\n                </h1>\r\n                <hr />\r\n                <br />\r\n                {this.state.showNodes ?\r\n                    <Nodes masterURL={this.state.masterURL}/>\r\n                    : null}\r\n                {this.state.showAgents ?\r\n                    <Agents wsURL={this.state.wsURL} masterURL={this.state.masterURL}/>\r\n                    : null}\r\n                {this.state.showMessages ?\r\n                    <Messages wsURL={this.state.wsURL} masterURL={this.state.masterURL}/>\r\n                    : null}\r\n                {this.state.showResults ?\r\n                    <Results wsURL={this.state.wsURL} masterURL={this.state.masterURL}/>\r\n                    : null}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default AgentCenter;","import React from 'react';\nimport AgentCenter from './components/AgentCenter/AgentCenter';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AgentCenter />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}